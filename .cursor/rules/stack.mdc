---
description: 编码规则
globs: 
alwaysApply: true
---


- 采用测试驱动开发，应积极编写单元测试
- 采用领域驱动设计，应严格遵循领域驱动设计六边形架构
- 应严格遵循 CQRS + 事件驱动架构
- 禁止通过依赖版本降级来试图解决问题，用户只使用最新依赖
- 禁止在构建系统当中引入新依赖，只有建议权

技术栈：
- jdk 24+
- kotlin 2.2+
- spring boot 3.5+
- jimmer 0.9.93+
- gradle 8.14+
- junit 5.13+
- mockk

kotlin 代码优化：
- 无需值使，应当使用 `also {}` 而非 `let {}`
- 代码嵌套层级不宜深入，应积极使用 `early return` 技巧， 提前结束来避免代码嵌套。

JSR规则：
- 禁止使用 spring 注解，应尽量使用 JSR 规范的注解
- 推荐使用 `@Resource`,`@Resources`,`@Inject` 替代 `@Autowired`

日志规则：
日志引入示例：应当使用 `slf4j` 函数来获取静态日志实例
```kotlin
import net.yan100.compose.slf4j

class Example {
  companion object {
    @JvmStatic
    private val log = slf4j<Example>()
  }
}
```

日志记录规则：
- 禁止使用 `println`
- 记录格式 `[methodName] message args1: {} , args2: {} ...`
```kotlin
log.trace("[changeName] changed name and age name: {} , age: {}", name, age)
```
- 记录消息应当使用 `{}` 占位符
- 日志信息必须使用英文书写

restful 规则：
- 完全遵循 restful 规范
- 全部采用 蛇形命名法，例如：`user/user_profile`、`{userId}/profile`
- spring mvc 注解的链接，开头不应该使用 `/` 开头，springmvc 会自动添加 `/`
